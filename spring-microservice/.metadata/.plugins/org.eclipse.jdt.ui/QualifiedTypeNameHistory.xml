<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
    <fullyQualifiedTypeName name="com.demo.microservice.configuration.LimitConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.ComponentScan"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.Column"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.microservice.demo.bean.CurrencyExchanged"/>
    <fullyQualifiedTypeName name="com.microservice.demo.repository.CurrencyExchangeRepo"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="com.microservice.demo.bean.CurrencyConversion"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.microservice.demo.proxy.CurrencyExchangeProxy"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.RouteLocator"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder"/>
    <fullyQualifiedTypeName name="com.sun.jndi.toolkit.url.Uri"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.GlobalFilter"/>
    <fullyQualifiedTypeName name="com.sun.org.slf4j.internal.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="com.microservice.demo.filter.LoggingFilter"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.jboss.logging.Logger"/>
    <fullyQualifiedTypeName name="com.microservice.demo.controller.CircuitBreakerController"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.retry.annotation.Retry"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.ratelimiter.annotation.RateLimiter"/>
</qualifiedTypeNameHistroy>
